site_name: ClientAI
site_description: A unified client for AI providers with built-in agent support.
site_author: Igor Benav
site_url: https://github.com/igorbenav/clientai

theme:
  name: material
  font:
    text: Ubuntu
  logo: assets/logo.png
  favicon: assets/logo.png
  features:
    - navigation.instant
    - navigation.instant.prefetch
    - navigation.tabs
    - navigation.indexes
    - search.suggest
    - content.code.copy
  palette:
    - media: "(prefers-color-scheme: light)"
      scheme: default
      primary: custom
      accent: custom
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      primary: custom
      accent: custom
      toggle:
        icon: material/brightness-4
        name: Switch to light mode

plugins:
  - search
  - meta-descriptions
  - mkdocstrings:
      handlers:
        python:
          rendering:
            show_source: true
  - i18n:
      languages:
        - locale: en
          name: en - English
          build: true
          default: true
        - locale: pt
          name: pt - Português (Brasil)
          build: true
          default: false
          nav:
            - ClientAI: pt/index.md
            - Uso:
              - Visão Geral: pt/usage/overview.md
            - Exemplos:
              - Visão Geral: pt/usage/overview.md
            - Aprenda:
              - Visão Geral: pt/usage/overview.md
            - Avançado:
              - Visão Geral: pt/usage/overview.md
            - Referência da API:
              - Visão Geral: pt/usage/overview.md
            - ShowCases:
              - Visão Geral: pt/usage/overview.md
            - Comunidade:
              - Visão Geral: pt/usage/overview.md

extra:
  alternate:
    - name: en - English
      link: /
      lang: en
    - name: pt - Português (Brasil)
      link: /pt/pt
      lang: pt

nav:
  - ClientAI: index.md
  - Usage:
    - Overview: usage/overview.md
    - Client:
      - Initialization: usage/client/initialization.md
      - Text Generation: usage/client/text_generation.md
      - Chat Functionality: usage/client/chat_functionality.md
      - Multiple Providers: usage/client/multiple_providers.md
      - Error Handling: usage/client/error_handling.md
    - Agent:
      - Creating Agents: usage/agent/creating_agents.md
      - Workflow Steps: usage/agent/workflow_steps.md
      - Tools and Tool Selection: usage/agent/tools.md
      - Context Management: usage/agent/context.md
      - Validation: usage/agent/validation.md
    - Ollama Manager: usage/ollama_manager.md
  - Examples:
    - Overview: examples/overview.md
    - Client Examples:
      - Simple Q&A Bot: examples/client/simple_qa.md
      - Multi-Provider Translator: examples/client/translator.md
      - AI Dungeon Master: examples/client/ai_dungeon_master.md
    - Agent Examples:
      - Simple Q&A Bot: examples/agent/simple_qa.md
      - Task Planner: examples/agent/task_planner.md
      - Writing Assistant: examples/agent/writing_assistant.md
      - Code Analyzer: examples/agent/code_analyzer.md
  - Learn:
    - Overview: learn/overview.md
  - Advanced:
    - Overview: advanced/overview.md
    - Client:
      - Ollama: advanced/client/ollama_specific.md
      - OpenAI: advanced/client/openai_specific.md
      - Replicate: advanced/client/replicate_specific.md
      - Groq: advanced/client/groq_specific.md
    - Agent:
      - Creating Custom Run: advanced/agent/creating_run.md
    - Error Handling: advanced/error_handling.md
  - API Reference:
    - Overview: api/overview.md
    - Agent:
      - Core:
        - Agent: api/agent/core/agent.md
        - AgentContext: api/agent/core/context.md
        - WorkflowManager: api/agent/core/workflow.md
        - StepExecutionEngine: api/agent/core/execution.md
      - Steps:
        - Step: api/agent/steps/step.md
        - StepTypes: api/agent/steps/types.md
        - Decorators: api/agent/steps/decorators.md
      - Tools:
        - Tool: api/agent/tools/tool.md
        - ToolRegistry: api/agent/tools/registry.md
        - ToolSelector: api/agent/tools/selector.md
    - Client:
      - ClientAI: api/client/clientai.md
      - AIProvider: api/client/ai_provider.md
      - Specific Providers:
        - Ollama: api/client/specific_providers/ollama_provider.md
        - OpenAI: api/client/specific_providers/openai_provider.md
        - Replicate: api/client/specific_providers/replicate_provider.md
        - Groq: api/client/specific_providers/groq_provider.md
      - Ollama Manager:
        - OllamaManager: api/client/ollama_manager/ollama_manager.md
        - OllamaServerConfig: api/client/ollama_manager/ollama_server_config.md
  - Showcase: showcase.md
  - Community:
    - Overview: community/overview.md
    - Contributing: community/CONTRIBUTING.md
    - Showcase Submission: community/showcase_submission.md
    - Code of Conduct: community/CODE_OF_CONDUCT.md
    - License: community/LICENSE.md

markdown_extensions:
  - admonition
  - codehilite
  - toc:
      permalink: true
  - pymdownx.details:
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences

repo_name: igorbenav/clientai
repo_url: https://github.com/igorbenav/clientai
edit_uri: edit/main/docs/

extra_css:
  - stylesheets/extra.css

extra:
  analytics:
    provider: google
    property: !ENV [GOOGLE_ANALYTICS_KEY, '']
